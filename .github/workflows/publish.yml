name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch: # Allow manual triggering

jobs:
  build-and-publish:
    name: Build and publish to PyPI
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/pyrattler-recipe-autogen
    permissions:
      id-token: write # For trusted publishing
      contents: write # For uploading release assets

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0 # Needed for hatch-vcs to get version from tags

      - name: Set up Pixi
        uses: prefix-dev/setup-pixi@v0.9.0
        with:
          pixi-version: v0.52.0
          cache: true

      - name: Install dependencies
        run: pixi install

      - name: Verify version matches tag
        if: github.event_name == 'release'
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          echo "Tag version: $TAG_VERSION"
          echo "Building from tag: $GITHUB_REF"
          # Since we're building from a release tag, version should be correct

      - name: Build package
        run: pixi run build

      - name: Run tests
        run: pixi run test-cov

      - name: Run linting
        run: pixi run check

      - name: Build package
        run: pixi run build

      - name: Update changelog
        if: github.event_name == 'release'
        run: |
          pixi run changelog
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add CHANGELOG.md
          git diff --staged --quiet || git commit -m "chore: update changelog for ${{ github.ref_name }}"

      - name: Check package
        run: |
          pixi run twine check dist/*

      - name: Publish to Test PyPI
        if: github.event_name == 'workflow_dispatch'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          verbose: true

      - name: Publish to PyPI
        if: github.event_name == 'release'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          verbose: true

      - name: Create GitHub Release Assets
        if: github.event_name == 'release'
        run: |
          gh release upload ${{ github.ref_name }} dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
