name: SonarCloud Analysis

on:
  push:
    branches: [main, develop]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarcloud:
    name: SonarCloud Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      checks: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for better analysis

      - name: Set up Pixi
        uses: prefix-dev/setup-pixi@v0.9.0
        with:
          pixi-version: v0.52.0
          cache: true

      - name: Install dependencies
        run: pixi install

      - name: Run tests with coverage
        run: pixi run test-cov

      - name: Run ruff linting with JSON output
        run: |
          pixi run lint --output-format=json > ruff-report.json || true

      - name: SonarCloud Scan
        uses: sonarsource/sonarqube-scan-action@v5.3.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          # Note: For SonarCloud, do not set SONAR_HOST_URL (it defaults to sonarcloud.io)

      - name: SonarCloud Quality Gate check
        id: sonarcloud-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@1.2.0
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          # Note: For SonarCloud, do not set SONAR_HOST_URL

      - name: "Show SonarCloud Quality Gate Status"
        run: echo "The Quality Gate status is ${{ steps.sonarcloud-quality-gate-check.outputs.quality-gate-status }}"
