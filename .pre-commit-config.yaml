# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
repos:
  # Basic file and formatting checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: check-added-large-files
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-symlinks
      - id: check-yaml
      - id: check-toml
      - id: check-json
      - id: debug-statements
      - id: end-of-file-fixer
      - id: mixed-line-ending
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: check-docstring-first
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable

  # Python formatting and linting with Ruff (replaces black, isort, flake8)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.12.11
    hooks:
      - id: ruff
        name: ruff lint
        args: [--fix, --exit-non-zero-on-fix]
        types_or: [python, pyi, jupyter]
      - id: ruff-format
        name: ruff format
        types_or: [python, pyi, jupyter]

  # Type checking with mypy
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.17.1
    hooks:
      - id: mypy
        additional_dependencies:
          - types-PyYAML
          - tomli
        args: [--config-file=pyproject.toml]
        files: ^src/

  # Security scanning
  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.6
    hooks:
      - id: bandit
        args:
          [
            -r,
            src/,
            -f,
            json,
            -o,
            bandit-report.json,
            --configfile,
            pyproject.toml,
          ]
        pass_filenames: false

  # Dependency vulnerability scanning
  - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
    rev: v1.4.2
    hooks:
      - id: python-safety-dependencies-check
        args: [--json, --output, safety-report.json, --continue-on-error]
        files: ^requirements.*\.txt$

  # Conventional commit message linting
  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v4.2.0
    hooks:
      - id: conventional-pre-commit
        stages: [commit-msg]

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.45.0
    hooks:
      - id: markdownlint
        args: [--fix]

  # # YAML/JSON/Markdown formatting with prettier (using archived but stable version)
  # - repo: https://github.com/pre-commit/mirrors-prettier
  #   rev: v4.0.0-alpha.8
  #   hooks:
  #     - id: prettier
  #       files: \.(yaml|yml|json|md)$
  #       args: [--write]

  # GitHub Actions workflow linting
  - repo: https://github.com/rhysd/actionlint
    rev: v1.7.7
    hooks:
      - id: actionlint

  # Pixi lock file updates
  - repo: local
    hooks:
      - id: pixi-lock
        name: Update pixi.lock when pyproject.toml changes
        entry: pixi lock
        language: system
        files: ^pyproject\.toml$
        pass_filenames: false

# Configuration
ci:
  autoupdate_schedule: weekly
  skip: [python-safety-dependencies-check] # Skip safety check due to pyproject.toml conflict
  submodules: false

default_language_version:
  python: python3.9

exclude: |
  (?x)^(
      \.git/|
      \.venv/|
      \.pixi/|
      __pycache__/|
      \.pytest_cache/|
      \.mypy_cache/|
      \.ruff_cache/|
      build/|
      dist/|
      .*\.egg-info/|
      htmlcov/|
      \.coverage.*|
      coverage\..*|
      bandit-report\.json|
      safety-report\.json
  )$
